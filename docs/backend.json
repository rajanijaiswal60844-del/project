
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the FaceFilter AI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "The user's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The user's last name."
        },
        "location": {
            "type": "object",
            "description": "The user's last known location.",
            "properties": {
                "latitude": { "type": "number" },
                "longitude": { "type": "number" },
                "timestamp": { "type": "object" }
            }
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a project that can be filtered and managed by the admin.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the project."
        },
        "description": {
          "type": "string",
          "description": "A description of the project."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the project's image."
        },
        "imageHint": {
          "type": "string",
          "description": "A hint for AI image generation."
        },
        "labels": {
          "type": "array",
          "description": "An array of label strings.",
          "items": {
            "type": "string"
          }
        },
        "rate": {
            "type": "number"
        },
        "createdAt": {
            "type": "object",
            "description": "Timestamp of project creation."
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "Label": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Label",
      "type": "object",
      "description": "Represents a label that can be assigned to projects for filtering.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the label."
        }
      },
      "required": [
        "name"      ]
    },
    "Comment": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Comment",
        "type": "object",
        "description": "Represents a comment on a project.",
        "properties": {
            "text": { "type": "string" },
            "author": { "type": "string" },
            "timestamp": { "type": "object" }
        },
        "required": ["text", "author", "timestamp"]
    },
    "ChatMessage": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ChatMessage",
        "type": "object",
        "description": "Represents a message in the chat.",
        "properties": {
            "username": { "type": "string" },
            "text": { "type": "string" },
            "image": { "type": "string" },
            "forwardedProject": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" }
                }
            },
            "timestamp": { "type": "object" }
        },
        "required": ["username", "timestamp"]
    },
    "UserFile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserFile",
      "type": "object",
      "description": "Represents a file uploaded by a user.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        },
        "fileType": {
          "type": "string",
          "description": "The type of the file (e.g., pdf, doc, image)."
        },
        "uploadDate": {
          "type": "object",
          "description": "The date and time the file was uploaded."
        },
        "fileSize": {
          "type": "number",
          "description": "The file size in bytes."
        },
        "downloadUrl": {
            "type": "string",
            "description": "The public URL to download the file."
        }
      },
      "required": [
        "fileName",
        "fileType",
        "uploadDate",
        "fileSize",
        "downloadUrl"
      ]
    },
    "UserPhoto": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserPhoto",
      "type": "object",
      "description": "Represents an image uploaded by a user, accessible by admins.",
      "properties": {
          "userId": { "type": "string" },
          "userName": { "type": "string" },
          "fileName": { "type": "string" },
          "downloadUrl": { "type": "string" },
          "uploadDate": { "type": "object" }
      },
      "required": ["userId", "userName", "fileName", "downloadUrl", "uploadDate"]
    },
    "SystemConfig": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SystemConfig",
      "type": "object",
      "description": "Stores system-level configuration.",
      "properties": {
        "authorizedUser": {
          "type": "object",
          "properties": {
            "faceDataUrl": {
              "type": "string",
              "description": "Data URL of the authorized user's face."
            }
          }
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Accessible only by the authenticated user (the 'userId' must match 'request.auth.uid'). Admins can read all user documents."
        }
      },
      {
        "path": "/users/{userId}/files/{fileId}",
        "definition": {
          "entityName": "UserFile",
          "schema": {
            "$ref": "#/backend/entities/UserFile"
          },
          "description": "Stores files uploaded by a user. Only the authenticated user can access their own files."
        }
      },
      {
        "path": "/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/backend/entities/Project"
          },
          "description": "Stores projects accessible by all authenticated users."
        }
      },
      {
        "path": "/projects/{projectId}/comments/{commentId}",
        "definition": {
            "entityName": "Comment",
            "schema": {
                "$ref": "#/backend/entities/Comment"
            },
            "description": "Stores comments for a specific project, accessible by all authenticated users."
        }
      },
      {
        "path": "/labels/{labelId}",
        "definition": {
          "entityName": "Label",
          "schema": {
            "$ref": "#/backend/entities/Label"
          },
          "description": "Stores global labels accessible by all authenticated users."
        }
      },
      {
        "path": "/chatMessages/{messageId}",
        "definition": {
          "entityName": "ChatMessage",
          "schema": {
            "$ref": "#/backend/entities/ChatMessage"
          },
          "description": "Stores global chat messages for all users."
        }
      },
      {
        "path": "/userPhotos/{photoId}",
        "definition": {
            "entityName": "UserPhoto",
            "schema": {
                "$ref": "#/backend/entities/UserPhoto"
            },
            "description": "A global collection of all user-uploaded photos, for admin viewing."
        }
      },
       {
        "path": "/systemConfig/{configId}",
        "definition": {
          "entityName": "SystemConfig",
          "schema": {
            "$ref": "#/backend/entities/SystemConfig"
          },
          "description": "Stores system-wide configuration data, like the authorized user's face."
        }
      }
    ]
  }
}
